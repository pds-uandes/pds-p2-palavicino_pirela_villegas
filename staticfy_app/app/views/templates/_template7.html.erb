<svg id="diagram-svg" width="300" height="300"></svg>

<script type="module">
  import * as Diagramatics from 'https://cdn.jsdelivr.net/npm/diagramatics@1.5/dist/diagramatics.min.js';

  document.addEventListener('DOMContentLoaded', function() {
    const mysvg = document.getElementById('diagram-svg');

    // Valores fijos
    const angle = 45;  // Ángulo en grados
    const radian = angle * Math.PI / 180;  // Convertir a radianes
    const forceMagnitude = 3;  // Magnitud de la fuerza en Newtons
    const length = 10;  // Longitud del objeto
    const force_x = 6;

    function updateDiagram() {
      mysvg.innerHTML = '';  // Limpiar el SVG antes de dibujar

      let draw = (...diagrams) => {
        Diagramatics.draw_to_svg(mysvg, Diagramatics.diagram_combine(...diagrams));
      };

      const basePosition = Diagramatics.V2(0, 0.5); 
      const r1 = Diagramatics.rectangle(length, 0.3)
        .move_origin('bottom-left')
        .position(basePosition)
        .fill('blue');

      let horizontal = Diagramatics.line(Diagramatics.V2(0, 0), Diagramatics.V2(10, 0))
        .stroke('black').strokedasharray([5, 5]).strokewidth(2);

      const triangle_base = Diagramatics.polygon([
        Diagramatics.V2(-0.25, 0),    
        Diagramatics.V2(0.25, 0),     
        Diagramatics.V2(0, (Math.sqrt(3)/2) * 0.5)
      ])
        .position(Diagramatics.V2(0, 0))
        .fill('black').strokewidth(3); 

      const joint_circle = Diagramatics.circle(0.25)
        .position(Diagramatics.V2(length, 0.25))
        .fill('white').strokewidth(5); 

      const arrow_head_size = 0.15;
      const positionOfForce = Diagramatics.V2(force_x, 3.8);  // 3 unidades desde el centro, hacia abajo
      const F_direction = Diagramatics.Vdir(Math.PI / 2).scale(-forceMagnitude); // Apunta hacia abajo, perpendicular
      const F = Diagramatics.annotation.vector(F_direction, '500 N', Diagramatics.V2(1, 2), arrow_head_size)
        .position(positionOfForce)
        .stroke('red').strokewidth(2).fill('red');

      const distanceAnnotation = Diagramatics.annotation.length(Diagramatics.V2(0, -0), Diagramatics.V2(length, -0), `${length} m`,  0.8, 0.5) // Ajustamos el text_offset a -0.5 para que el texto esté sobre la línea
        .stroke('blue');

      const distanceAnnotation_2 = Diagramatics.annotation.length(Diagramatics.V2(0, 0.5), Diagramatics.V2(force_x-0.1, 0.5), `${force_x} m`,  -0.8, 0.5) // Ajustamos el text_offset a -0.5 para que el texto esté sobre la línea
        .stroke('blue');

      draw(r1, F, triangle_base, joint_circle, distanceAnnotation, distanceAnnotation_2);
    }

    updateDiagram();
  });
</script>
