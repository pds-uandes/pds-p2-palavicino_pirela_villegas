<svg id="diagram-svg" width="300" height="300"></svg>

<script type="module">
  import * as Diagramatics from 'https://cdn.jsdelivr.net/npm/diagramatics@1.5/dist/diagramatics.min.js';

  document.addEventListener('DOMContentLoaded', function() {
    const mysvg = document.getElementById('diagram-svg');
    
    // Definir los valores para el problema
    const forceMagnitude = 2; // Fuerza aplicada en Newtons
    const length = 10; // Longitud de la barra en metros
    const distanceFromCenter = 4; // Distancia desde la mitad de la barra donde se aplica la fuerza

    function updateDiagram() {
      mysvg.innerHTML = ''; // Limpiar el SVG antes de dibujar

      let draw = (...diagrams) => {
        Diagramatics.draw_to_svg(mysvg, Diagramatics.diagram_combine(...diagrams));
      };

      // Configuración de la barra
      const basePosition = Diagramatics.V2(0, 0.433); 
      const r1 = Diagramatics.rectangle(length, 0.3)
        .move_origin('bottom-left')
        .position(basePosition)
        .fill('blue');

      // Líneas de referencia horizontales
      let horizontal = Diagramatics.line(Diagramatics.V2(0, 0), Diagramatics.V2(10, 0))
        .stroke('black').strokedasharray([5, 5]).strokewidth(2);

      // Fuerza aplicada perpendicularmente a la barra, hacia abajo
      const arrow_head_size = 0.15;
      const positionOfForce = Diagramatics.V2((1/3)*4, 3);  // 3 unidades desde el centro, hacia abajo
      const F_direction = Diagramatics.Vdir(Math.PI / 2).scale(-forceMagnitude); // Apunta hacia abajo, perpendicular
      const F = Diagramatics.annotation.vector(F_direction, '400 N/m', Diagramatics.V2(2, 2), arrow_head_size)
        .position(positionOfForce)
        .stroke('black').strokewidth(2).fill('black');

      // Triángulo que indica la base del objeto
      const triangle_base = Diagramatics.polygon([
        Diagramatics.V2(-0.25, 0),    
        Diagramatics.V2(0.25, 0),     
        Diagramatics.V2(0, (Math.sqrt(3) / 2) * 0.5)
      ])
        .position(Diagramatics.V2(0, 0))
        .fill('black');

      const triangle_base_2 = Diagramatics.polygon([
        Diagramatics.V2(-0.25, 0),    
        Diagramatics.V2(0.25, 0),     
        Diagramatics.V2(0, (Math.sqrt(3) / 2) * 0.5)
      ])
        .position(Diagramatics.V2(length, 0))
        .fill('black');

      const triangle_force = Diagramatics.polygon([
        Diagramatics.V2(0, 0),    
        Diagramatics.V2(0, 3),     
        Diagramatics.V2(4, 0)
      ])
        .position(Diagramatics.V2(0, 1))
        .strokedasharray([5]).fill('red');

    // Posiciones de los puntos para la anotación de 3 metros
      const midPoint = Diagramatics.V2(0, 4); // Punto medio de la barra
      const forcePoint = Diagramatics.V2(0 + distanceFromCenter, 1); // Donde se aplica la fuerza

      // Anotación de la distancia entre el punto medio y donde se aplica la fuerza
      const distanceAnnotation = Diagramatics.annotation.length(midPoint, forcePoint, '400 N/m', -0.8, 0.5) // Ajustamos el text_offset a -0.5 para que el texto esté sobre la línea
        .stroke('blue');

      // Círculo en el eje de rotación
      const joint_circle = Diagramatics.circle(0.25)
        .position(Diagramatics.V2(length / 2, 0))
        .fill('white').strokewidth(5); 

      // Dibujar los componentes
      draw(horizontal, r1,  triangle_base, triangle_base_2, triangle_force, F);
    }

    updateDiagram();
  });
</script>
