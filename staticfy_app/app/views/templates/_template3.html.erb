<svg id="diagram-svg" width="300" height="300"></svg>

<script type="module">
  import * as Diagramatics from 'https://cdn.jsdelivr.net/npm/diagramatics@1.5/dist/diagramatics.min.js';

  document.addEventListener('DOMContentLoaded', function() {
    const mysvg = document.getElementById('diagram-svg');
    
    const forceMagnitude = <%= @force_magnitude_3 %>;
    const length = 10;
    const length_2 = 3;
    const distanceFromCenter = <%= @longitud_3 %>;

    function updateDiagram() {
      mysvg.innerHTML = ''; 

      let draw = (...diagrams) => {
        Diagramatics.draw_to_svg(mysvg, Diagramatics.diagram_combine(...diagrams));
      };

      const basePosition = Diagramatics.V2(0, 0.433); 
      const r1 = Diagramatics.rectangle(length, 0.3)
        .move_origin('bottom-left')
        .position(basePosition)
        .fill('blue');

      const r2 = Diagramatics.rectangle(0.5, length_2)
        .move_origin('bottom-left')
        .rotate(Math.PI) 
        .position(Diagramatics.V2((length / 2)+0.25, 0))
        .fill('gray');

      let horizontal = Diagramatics.line(Diagramatics.V2(0, -3), Diagramatics.V2(10, -3))
        .stroke('black').strokedasharray([5, 5]).strokewidth(2);

      const arrow_head_size = 0.15;
      const positionOfForce = Diagramatics.V2(length / 2 + distanceFromCenter, 0.433);  
      const F_direction = Diagramatics.Vdir(Math.PI / 2).scale(-forceMagnitude/100); 
      const F = Diagramatics.annotation.vector(F_direction, `${forceMagnitude} N`, Diagramatics.V2(1, 1), arrow_head_size)
        .position(positionOfForce)
        .stroke('red').strokewidth(2).fill('red');

      const triangle_base = Diagramatics.polygon([
        Diagramatics.V2(-0.25, 0),    
        Diagramatics.V2(0.25, 0),     
        Diagramatics.V2(0, (Math.sqrt(3) / 2) * 0.5)
      ])
        .position(Diagramatics.V2(length / 2, 0))
        .fill('gray');

      const midPoint = Diagramatics.V2(length / 2, 1); 
      const forcePoint = Diagramatics.V2(length / 2 + distanceFromCenter, 1); 

      const distanceAnnotation = Diagramatics.annotation.length(midPoint, forcePoint, `${distanceFromCenter} m`, -0.3, 0.5) 

      const joint_circle = Diagramatics.circle(0.25)
        .position(Diagramatics.V2(length / 2, 0))
        .fill('white').strokewidth(5); 

      draw(horizontal, r1, r2, F, triangle_base, distanceAnnotation);
    }

    updateDiagram();
  });
</script>
